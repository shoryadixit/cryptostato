{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.default = InlineStyleToObject;\n/**\r\n * Converts an inline style string into an object of React style properties\r\n *\r\n * @param {String} inlineStyle='' The inline style to convert\r\n * @returns {Object} The converted style\r\n */\n\nfunction InlineStyleToObject() {\n  var inlineStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''; // just return empty object if the inlineStyle is empty\n\n  if (inlineStyle === '') {\n    return {};\n  }\n\n  return inlineStyle.split(';').reduce(function (styleObject, stylePropertyValue) {\n    // extract the style property name and value\n    var _stylePropertyValue$s = stylePropertyValue.split(/^([^:]+):/).filter(function (val, i) {\n      return i > 0;\n    }).map(function (item) {\n      return item.trim().toLowerCase();\n    }),\n        _stylePropertyValue$s2 = _slicedToArray(_stylePropertyValue$s, 2),\n        property = _stylePropertyValue$s2[0],\n        value = _stylePropertyValue$s2[1]; // if there is no value (i.e. no : in the style) then ignore it\n\n\n    if (value === undefined) {\n      return styleObject;\n    } // convert the property name into the correct React format\n    // remove all hyphens and convert the letter immediately after each hyphen to upper case\n    // additionally don't uppercase any -ms- prefix\n    // e.g. -ms-style-property = msStyleProperty\n    //      -webkit-style-property = WebkitStyleProperty\n\n\n    property = property.replace(/^-ms-/, 'ms-').replace(/-(.)/g, function (_, character) {\n      return character.toUpperCase();\n    }); // add the new style property and value to the style object\n\n    styleObject[property] = value;\n    return styleObject;\n  }, {});\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","default","InlineStyleToObject","inlineStyle","arguments","split","reduce","styleObject","stylePropertyValue","_stylePropertyValue$s","filter","val","map","item","trim","toLowerCase","_stylePropertyValue$s2","property","replace","_","character","toUpperCase"],"sources":["D:/cryptoStato/node_modules/react-html-parser/lib/utils/inlineStyleToObject.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\r\n\r\nexports.default = InlineStyleToObject;\r\n/**\r\n * Converts an inline style string into an object of React style properties\r\n *\r\n * @param {String} inlineStyle='' The inline style to convert\r\n * @returns {Object} The converted style\r\n */\r\nfunction InlineStyleToObject() {\r\n  var inlineStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n\r\n\r\n  // just return empty object if the inlineStyle is empty\r\n  if (inlineStyle === '') {\r\n    return {};\r\n  }\r\n\r\n  return inlineStyle.split(';').reduce(function (styleObject, stylePropertyValue) {\r\n\r\n    // extract the style property name and value\r\n    var _stylePropertyValue$s = stylePropertyValue.split(/^([^:]+):/).filter(function (val, i) {\r\n      return i > 0;\r\n    }).map(function (item) {\r\n      return item.trim().toLowerCase();\r\n    }),\r\n        _stylePropertyValue$s2 = _slicedToArray(_stylePropertyValue$s, 2),\r\n        property = _stylePropertyValue$s2[0],\r\n        value = _stylePropertyValue$s2[1];\r\n\r\n    // if there is no value (i.e. no : in the style) then ignore it\r\n\r\n\r\n    if (value === undefined) {\r\n      return styleObject;\r\n    }\r\n\r\n    // convert the property name into the correct React format\r\n    // remove all hyphens and convert the letter immediately after each hyphen to upper case\r\n    // additionally don't uppercase any -ms- prefix\r\n    // e.g. -ms-style-property = msStyleProperty\r\n    //      -webkit-style-property = WebkitStyleProperty\r\n    property = property.replace(/^-ms-/, 'ms-').replace(/-(.)/g, function (_, character) {\r\n      return character.toUpperCase();\r\n    });\r\n\r\n    // add the new style property and value to the style object\r\n    styleObject[property] = value;\r\n\r\n    return styleObject;\r\n  }, {});\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}