{"ast":null,"code":"import _slicedToArray from \"/media/shorya/Local Disk/cryptoStato/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/media/shorya/Local Disk/cryptoStato/src/CryptoContext.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Crypto = /*#__PURE__*/createContext();\n\nvar CryptoContext = function CryptoContext(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(\"INR\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currency = _useState2[0],\n      setCurrency = _useState2[1];\n\n  var _useState3 = useState(\"₹\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      symbol = _useState4[0],\n      setSymbol = _useState4[1];\n\n  useEffect(function () {\n    if (currency === \"INR\") setSymbol(\"₹\");else if (currency === \"USD\") setSymbol(\"$\");\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    value: {\n      currency: currency,\n      setCurrency: setCurrency,\n      symbol: symbol\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CryptoContext, \"Gq7De48h8abbN7rXPNWvFlysLIk=\");\n\n_c = CryptoContext;\nexport default CryptoContext;\nexport var CryptoState = function CryptoState() {\n  _s2();\n\n  return useContext(Crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Crypto","CryptoContext","children","currency","setCurrency","symbol","setSymbol","CryptoState"],"sources":["/media/shorya/Local Disk/cryptoStato/src/CryptoContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({ children }) => {\r\n  const [currency, setCurrency] = useState(\"INR\");\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n\r\n  useEffect(() => {\r\n    if (currency === \"INR\") setSymbol(\"₹\");\r\n    else if (currency === \"USD\") setSymbol(\"$\");\r\n  }, [currency]);\r\n\r\n  return (\r\n    <Crypto.Provider value={{ currency, setCurrency, symbol }}>\r\n      {children}\r\n    </Crypto.Provider>\r\n  );\r\n};\r\n\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n  return useContext(Crypto);\r\n};"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;;AAEA,IAAMC,MAAM,gBAAGJ,aAAa,EAA5B;;AAEA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;EAAA;;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EACtC,gBAAgCH,QAAQ,CAAC,KAAD,CAAxC;EAAA;EAAA,IAAOI,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA4BL,QAAQ,CAAC,GAAD,CAApC;EAAA;EAAA,IAAOM,MAAP;EAAA,IAAeC,SAAf;;EAEAR,SAAS,CAAC,YAAM;IACd,IAAIK,QAAQ,KAAK,KAAjB,EAAwBG,SAAS,CAAC,GAAD,CAAT,CAAxB,KACK,IAAIH,QAAQ,KAAK,KAAjB,EAAwBG,SAAS,CAAC,GAAD,CAAT;EAC9B,CAHQ,EAGN,CAACH,QAAD,CAHM,CAAT;EAKA,oBACE,QAAC,MAAD,CAAQ,QAAR;IAAiB,KAAK,EAAE;MAAEA,QAAQ,EAARA,QAAF;MAAYC,WAAW,EAAXA,WAAZ;MAAyBC,MAAM,EAANA;IAAzB,CAAxB;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,SADF;AAKD,CAdD;;GAAMD,a;;KAAAA,a;AAgBN,eAAeA,aAAf;AAEA,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;EAAA;;EAC/B,OAAOV,UAAU,CAACG,MAAD,CAAjB;AACD,CAFM;;IAAMO,W;;MAAAA,W"},"metadata":{},"sourceType":"module"}