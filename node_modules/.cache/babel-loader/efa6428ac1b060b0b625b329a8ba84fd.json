{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateDirectionDelta = calculateDirectionDelta;\n\nvar _types = require(\"../types\");\n\nvar _ = require(\".\");\n\nfunction calculateDirectionDelta(traceDirections) {\n  var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var length = traceDirections.length;\n  var i = length - 1;\n  var direction = _types.TraceDirectionKey.NONE;\n\n  for (; i >= 0; i--) {\n    var current = traceDirections[i];\n    var currentKey = (0, _.getDirectionKey)(current);\n    var currentValue = (0, _.getDirectionValue)(current[currentKey]);\n    var prev = traceDirections[i - 1] || {};\n    var prevKey = (0, _.getDirectionKey)(prev);\n    var prevValue = (0, _.getDirectionValue)(prev[prevKey]);\n    var difference = (0, _.getDifference)(currentValue, prevValue);\n\n    if (difference >= delta) {\n      direction = currentKey;\n      break;\n    } else {\n      direction = prevKey;\n    }\n  }\n\n  return direction;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","calculateDirectionDelta","_types","require","_","traceDirections","delta","arguments","length","undefined","i","direction","TraceDirectionKey","NONE","current","currentKey","getDirectionKey","currentValue","getDirectionValue","prev","prevKey","prevValue","difference","getDifference"],"sources":["C:/Users/shaur/Desktop/cryptoStato/node_modules/vanilla-swipe/lib/utils/calculateDirectionDelta.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.calculateDirectionDelta = calculateDirectionDelta;\r\n\r\nvar _types = require(\"../types\");\r\n\r\nvar _ = require(\".\");\r\n\r\nfunction calculateDirectionDelta(traceDirections) {\r\n  var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n  var length = traceDirections.length;\r\n  var i = length - 1;\r\n  var direction = _types.TraceDirectionKey.NONE;\r\n\r\n  for (; i >= 0; i--) {\r\n    var current = traceDirections[i];\r\n    var currentKey = (0, _.getDirectionKey)(current);\r\n    var currentValue = (0, _.getDirectionValue)(current[currentKey]);\r\n    var prev = traceDirections[i - 1] || {};\r\n    var prevKey = (0, _.getDirectionKey)(prev);\r\n    var prevValue = (0, _.getDirectionValue)(prev[prevKey]);\r\n    var difference = (0, _.getDifference)(currentValue, prevValue);\r\n\r\n    if (difference >= delta) {\r\n      direction = currentKey;\r\n      break;\r\n    } else {\r\n      direction = prevKey;\r\n    }\r\n  }\r\n\r\n  return direction;\r\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAIC,CAAC,GAAGD,OAAO,CAAC,GAAD,CAAf;;AAEA,SAASF,uBAAT,CAAiCI,eAAjC,EAAkD;EAChD,IAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAhF;EACA,IAAIC,MAAM,GAAGH,eAAe,CAACG,MAA7B;EACA,IAAIE,CAAC,GAAGF,MAAM,GAAG,CAAjB;EACA,IAAIG,SAAS,GAAGT,MAAM,CAACU,iBAAP,CAAyBC,IAAzC;;EAEA,OAAOH,CAAC,IAAI,CAAZ,EAAeA,CAAC,EAAhB,EAAoB;IAClB,IAAII,OAAO,GAAGT,eAAe,CAACK,CAAD,CAA7B;IACA,IAAIK,UAAU,GAAG,CAAC,GAAGX,CAAC,CAACY,eAAN,EAAuBF,OAAvB,CAAjB;IACA,IAAIG,YAAY,GAAG,CAAC,GAAGb,CAAC,CAACc,iBAAN,EAAyBJ,OAAO,CAACC,UAAD,CAAhC,CAAnB;IACA,IAAII,IAAI,GAAGd,eAAe,CAACK,CAAC,GAAG,CAAL,CAAf,IAA0B,EAArC;IACA,IAAIU,OAAO,GAAG,CAAC,GAAGhB,CAAC,CAACY,eAAN,EAAuBG,IAAvB,CAAd;IACA,IAAIE,SAAS,GAAG,CAAC,GAAGjB,CAAC,CAACc,iBAAN,EAAyBC,IAAI,CAACC,OAAD,CAA7B,CAAhB;IACA,IAAIE,UAAU,GAAG,CAAC,GAAGlB,CAAC,CAACmB,aAAN,EAAqBN,YAArB,EAAmCI,SAAnC,CAAjB;;IAEA,IAAIC,UAAU,IAAIhB,KAAlB,EAAyB;MACvBK,SAAS,GAAGI,UAAZ;MACA;IACD,CAHD,MAGO;MACLJ,SAAS,GAAGS,OAAZ;IACD;EACF;;EAED,OAAOT,SAAP;AACD"},"metadata":{},"sourceType":"script"}